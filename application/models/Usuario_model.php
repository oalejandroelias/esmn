<?php
/*
* Generated by CRUDigniter v3.2
* www.crudigniter.com
*/

class Usuario_model extends CI_Model
{
  function __construct()
  {
    parent::__construct();
  }


  /*
  * Get usuario by id_persona
  */
  function get_usuario_by_persona($id_persona)
  {
    return $this->db->get_where('usuario',array('id_persona'=>$id_persona))->row_array();
  }

  /*
  * Get usuario by id
  */
  function get_usuario($id, $params = '')
  {
    // return $this->db->get_where('usuario',array('id'=>$id))->row_array();
    $this->db->select('persona.id AS "persona_id",persona.nombre,apellido,persona.foto,usuario.id AS "usuario_id",
                      username,usuario.activo,usuario.online,usuario.id_socket');
    $this->db->from('usuario');
    $this->db->join('persona', 'persona.id = usuario.id_persona', 'inner');
    if (isset($params) && $params != '') {
      $this->db->like('nombre', $params);
      $this->db->or_like('apellido', $params);
      $this->db->limit(6);
      $method = "result_array";
    }else {
      $this->db->where('usuario.id',$id);
      $method = "row_array";
    }
    $this->db->order_by('usuario_id', 'desc');
    $query = $this->db->get();
    // return $this->db->last_query();
    return $query->$method();
  }

  /*
  * Get all usuarios count
  */
  function get_all_usuarios_count()
  {
    $this->db->from('usuario');
    return $this->db->count_all_results();
  }

  /*
  * Get all usuarios
  */
  function get_all_usuarios($params = array())
  {
    $this->db->select('persona.id AS "persona_id",tipo_documento.nombre AS "tipo_documento",
                      numero_documento,persona.nombre,apellido,usuario.id AS "usuario_id",
                      username,id_perfil,perfil.permisos,perfil.nombre AS "rol", usuario.activo');
    $this->db->from('usuario');
    $this->db->join('persona', 'persona.id = usuario.id_persona', 'inner');
    $this->db->join('tipo_documento', 'tipo_documento.id = persona.id_tipo_documento', 'inner');
    $this->db->join('perfil_usuario', 'usuario.id = perfil_usuario.id_usuario', 'inner');
    $this->db->join('perfil', 'perfil.id = perfil_usuario.id_perfil', 'inner');

    $this->db->order_by('usuario_id', 'desc');
    if(isset($params) && !empty($params))
    {
      $this->db->limit($params['limit'], $params['offset']);
    }
    $query = $this->db->get();
    return $query->result_array();
  }

  /*
  * function to add new usuario
  */
  function add_usuario($params)
  {
    $this->db->insert('usuario',$params);
    return $this->db->insert_id();
  }

  /*
  * function to update usuario
  */
  function update_usuario($id,$params)
  {
    $this->db->where('id',$id);
    return $this->db->update('usuario',$params);
  }

  /*
  * function to delete usuario
  */
  function delete_usuario($id)
  {
    return $this->db->delete('usuario',array('id'=>$id));
  }

  // funcion comprobar usuario y contraseÃ±a
public function check_password($id,$password){
  return $this->db->get_where('usuario',array('id'=>$id,'password'=>$password))->row_array();
}

  // obtener todos los datos para un logueo exitoso
  public function login($username,$password){
    $this->db->select('persona.id AS "persona_id",tipo_documento.nombre AS "tipo_documento",
                       numero_documento,persona.nombre,apellido,usuario.id AS "usuario_id",
                       email,username,id_perfil,perfil.nombre AS "nombre_perfil",perfil.permisos,
                       usuario.activo');
    $this->db->from('persona');
    $this->db->join('tipo_documento','tipo_documento.id=persona.id_tipo_documento','inner');
    $this->db->join('usuario','usuario.id_persona=persona.id','inner');
    $this->db->join('perfil_usuario','perfil_usuario.id_usuario=usuario.id','inner');
    $this->db->join('perfil','perfil.id=perfil_usuario.id_perfil','inner');
    $this->db->where('username',$username);
    $this->db->where('password',$password);
    $query = $this->db->get();
    return ($query->num_rows() == 1) ? $query->row() : false;
  }

}
