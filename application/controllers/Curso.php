<?php
/*
* Generated by CRUDigniter v3.2
* www.crudigniter.com
*/

class Curso extends CI_Controller{
  function __construct()
  {
    parent::__construct();
    is_logged_in();
    validar_acceso();
    $this->load->model('Curso_model');
    $this->load->model('Catedra_model');
    $this->load->model('Materia_model');
    $this->load->model('Periodo_model');
    $this->load->model('Persona_model');
    $this->load->model('Carrera_model');
    $this->load->model('Modelo_global_model');

  }

  /*
  * Listing of curso
  */
  function index()
  {
    $data['cursos'] = $this->Curso_model->get_all_curso();
    $data['catedras'] = $this->Catedra_model->get_all_catedras();

    $data['title'] = 'Cursos - ESMN';
    $data['page_title'] = 'Curso';

    //validar botones
    $data['boton_edit']=validar_botones('edit');
    $data['boton_add']=validar_botones('add');
    $data['boton_remove']=validar_botones('remove');

    $data['js'] = array('curso_index.js');

    $this->load->view('templates/header',$data);
    $this->load->view('curso/index',$data);
    $this->load->view('templates/footer');
  }

  /*
  * Adding a new curso
  */
  function add()
  {
    $this->form_validation->set_rules('id_materia','Materia','required|integer');
    $this->form_validation->set_rules('id_periodo','Periodo','required|integer');
    $this->form_validation->set_rules('dayWeek[]','Dias de semana','required');
    $this->form_validation->set_rules('diascursado','Json dias de cursado','required');
    $this->form_validation->set_rules('id_persona[]','Catedra','required');

    if($this->form_validation->run())
    {
      $params = array(
        'id_materia' => $this->input->post('id_materia',TRUE),
        'id_periodo' => $this->input->post('id_periodo',TRUE),
        'diascursado' => $this->input->post('diascursado',TRUE),
        'diassemana' => json_encode($this->input->post('dayWeek[]')),
      );

      $curso_id = $this->Curso_model->add_curso($params);

      if (isset($curso_id)) { //cargar catedra
        $catedra = $this->input->post('id_persona[]',TRUE);

        foreach ($catedra as $persona) {
          $params = array(
            'id_curso' => $curso_id,
            'id_persona' => $persona,
          );

          $this->Catedra_model->add_catedra($params);
        }
      }

      $this->session->set_flashdata('crear', 'Nuevo curso creado');
      redirect('curso/index');
    }

    else
    {
      $data['title'] = 'Nuevo Curso - ESMN';
      $data['page_title'] = 'Nuevo Curso';

      $data['all_materias'] = $this->Materia_model->get_all_materias();
      $data['all_periodos'] = $this->Periodo_model->get_all_periodo();
      $data['personas'] = $this->Persona_model->get_all_personas();

      $data['js'] = array('curso.js');
      $data['css'] = array('curso.css');

      $this->load->view('templates/header',$data);
      $this->load->view('curso/add',$data);
      $this->load->view('templates/footer');
    }
  }

  function get_days_period(){
    if ($this->input->is_ajax_request() && !empty($_POST)) {
      $dias_cursado = getDaysPeriod($_POST['fecha_inicio'],$_POST['fecha_fin'],$this->input->post('daysWeek[]',TRUE));
      echo json_encode($dias_cursado);
    }
    return false;
  }

  /*
  * Editing a curso
  */
  function edit($id)
  {
    $data['curso'] = $this->Curso_model->get_all_curso(array('row'=>'curso.id','value'=>$id));
    $data['curso'] = (isset($data['curso'][0])) ? $data['curso'][0] : null;
    // print_r($data['curso']);exit;
    if(isset($data['curso']['curso_id']))
    {
      $this->form_validation->set_rules('id_materia','Materia','required|integer');
      $this->form_validation->set_rules('id_periodo','Periodo','required|integer');
      $this->form_validation->set_rules('dayWeek[]','Dayweek','required');
      $this->form_validation->set_rules('diascursado','Json dias de cursado','required');
      $this->form_validation->set_rules('id_persona[]','Catedra','required');

      if($this->form_validation->run())
      {
        $params = array(
          'id_materia' => $this->input->post('id_materia',TRUE),
          'id_periodo' => $this->input->post('id_periodo',TRUE),
          'diascursado' => $this->input->post('diascursado',TRUE),
          'diassemana' => json_encode($this->input->post('dayWeek[]')),
        );

        if($this->Curso_model->update_curso($id,$params)){
          $this->Catedra_model->delete_catedra($data['curso']['curso_id']); //eliminar todas las coincidencias y recrearlas
          $catedra = $this->input->post('id_persona[]',TRUE);

          foreach ($catedra as $persona) {
            $params = array(
              'id_curso' => $id,
              'id_persona' => $persona,
            );

            $this->Catedra_model->add_catedra($params);
          }
        }


        $this->session->set_flashdata('editar', 'Se guardaron los cambios');
        redirect('curso/index');
      }
      else
      {
        $data['title'] = 'Editar curso - ESMN';
        $data['page_title'] = 'Editar Curso -> '.$data['curso']['nombre'];

        $data['all_materias'] = $this->Materia_model->get_all_materias();
        $data['all_periodos'] = $this->Periodo_model->get_all_periodo();
        $data['personas'] = $this->Persona_model->get_all_personas();
        $data['catedra'] = $this->Catedra_model->get_all_catedras(array('row'=>'id_curso','value'=>$data['curso']['curso_id']));

        $data['js'] = array('curso.js');
        $data['css'] = array('curso.css');

        $this->load->view('templates/header',$data);
        $this->load->view('curso/edit',$data);
        $this->load->view('templates/footer');
      }
    }

    else
    show_error('The curso you are trying to edit does not exist.');
  }

  /*
  * Deleting curso
  */
  function remove($id)
  {
    $curso = $this->Curso_model->get_curso($id);

    // check if the curso exists before trying to delete it
    if(isset($curso['id']))
    {
      $this->Curso_model->delete_curso($id);
      redirect('curso/index');
    }
    else
    show_error('The curso you are trying to delete does not exist.');
  }

}
