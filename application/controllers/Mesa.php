<?php
/*
* Generated by CRUDigniter v3.2
* www.crudigniter.com
*/

class Mesa extends CI_Controller{
  function __construct()
  {
    parent::__construct();
    is_logged_in();
    validar_acceso();
    $this->load->model('Mesa_model');
    $this->load->model('Materia_model');
    $this->load->model('Tribunal_model');
    $this->load->model('Persona_model');
  }

  /*
  * Listing of mesas
  */
  function index()
  {
    $data['title'] = 'Mesas - ESMN';
    $data['page_title'] = 'Mesas';

    $data['mesas'] = $this->Mesa_model->get_all_mesas();
    $data['tribunales'] = $this->Tribunal_model->get_all_tribunales();

    //Botones de acciones
    $data['boton_edit']=validar_botones('edit');
    $data['boton_add']=validar_botones('add');
    $data['boton_remove']=validar_botones('remove');

    $this->load->view('templates/header',$data);
    $this->load->view('mesa/index',$data);
    $this->load->view('templates/footer');
  }

  /*
  * Adding a new mesa
  */
  function add()
  {
    $this->form_validation->set_rules('id_materia','Materia','required|integer');
    $this->form_validation->set_rules('fecha','Fecha','required');
    $this->form_validation->set_rules('hora','Hora','required');
    $this->form_validation->set_rules('id_persona[]','Tribunal','required');

    if($this->form_validation->run())
    {
      $fecha = date('Y-m-d', strtotime(str_replace('/', '-',$this->input->post('fecha',true))));
      $hora = substr($this->input->post('hora',true),0,-3);
      $datetime = $fecha.' '.$hora.':00';
      $params = array(
        'id_materia' => $this->input->post('id_materia'),
        'fecha' => $datetime,
      );

      $mesa_id = $this->Mesa_model->add_mesa($params);

      if (isset($mesa_id)) { //cargar tribunal
        $tribunal = $this->input->post('id_persona[]',TRUE);

        foreach ($tribunal as $persona) {
          $params = array(
            'id_mesa' => $mesa_id,
            'id_persona' => $persona,
          );

          $this->Tribunal_model->add_tribunal($params);
        }
      }

      $this->session->set_flashdata('crear', 'Nueva mesa creada');
      redirect('mesa/index');
    }
    else
    {

      $data['all_materias'] = $this->Materia_model->get_all_materias(array(),array('row'=>'materia.activo','value'=>1));
      $data['personas'] = $this->Persona_model->get_all_personas(array(),array('row'=>'persona.activo','value'=>1));

      $data['title'] = 'Nueva mesa - ESMN';
      $data['page_title'] = 'Nueva mesa de examen';

      $data['js'] = array('mesa.js');

      $this->load->view('templates/header',$data);
      $this->load->view('mesa/add',$data);
      $this->load->view('templates/footer',$data);
    }
  }

  /*
  * Editing a mesa
  */
  function edit($id)
  {
    // check if the mesa exists before trying to edit it
    $data['mesa'] = $this->Mesa_model->get_all_mesas(array('row'=>'mesa.id','value'=>$id));
    $data['mesa'] = (isset($data['mesa'][0])) ? $data['mesa'][0] : null;

    if(isset($data['mesa']['id_mesa']))
    {
      $this->form_validation->set_rules('id_materia','Id Materia','required|integer');
      $this->form_validation->set_rules('fecha','Fecha','required');

      if($this->form_validation->run())
      {
        $fecha = date('Y-m-d', strtotime(str_replace('/', '-',$this->input->post('fecha',true))));
        $hora = substr($this->input->post('hora',true),0,-3);
        $datetime = $fecha.' '.$hora.':00';
        $params = array(
          'id_materia' => $this->input->post('id_materia'),
          'fecha' => $datetime,
        );

        if($this->Mesa_model->update_mesa($id,$params)){
          $this->Tribunal_model->delete_tribunal($data['mesa']['id_mesa']); //eliminar todas las coincidencias y recrearlas
          $tribunal = $this->input->post('id_persona[]',TRUE);

          foreach ($tribunal as $persona) {
            $params = array(
              'id_mesa' => $id,
              'id_persona' => $persona,
            );

            $this->Tribunal_model->add_tribunal($params);
          }
        }

        $this->session->set_flashdata('editar', 'Se guardaron los cambios');
        redirect('mesa/index');
      }
      else
      {
        $data['all_materias'] = $this->Materia_model->get_all_materias();
        $data['tribunal'] = $this->Tribunal_model->get_all_tribunales(array('row'=>'id_mesa','value'=>$data['mesa']['id_mesa']));
        $data['personas'] = $this->Persona_model->get_all_personas();

        $data['title'] = 'Editar mesa - ESMN';
        $data['page_title'] = 'Editar mesa de examen -> '.$data['mesa']['materia'].' ('.$data['mesa']['fecha'].')';

        $data['js'] = array('mesa.js');

        $this->load->view('templates/header',$data);
        $this->load->view('mesa/edit',$data);
        $this->load->view('templates/footer',$data);
      }
    }
    else
    show_error('The mesa you are trying to edit does not exist.');
  }

  /*
  * Deleting mesa
  */
  function remove($id)
  {
    $mesa = $this->Mesa_model->get_all_mesas(array('row'=>'mesa.id','value'=>$id))[0];

    // check if the mesa exists before trying to delete it
    if(isset($mesa['id_mesa']))
    {
      $this->Mesa_model->update_mesa($id,array('activo'=>0));
      redirect('mesa/index');
    }
    else
    show_error('The mesa you are trying to delete does not exist.');
  }

}
