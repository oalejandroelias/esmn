<?php
/*
* Generated by CRUDigniter v3.2
* www.crudigniter.com
*/

class Usuario extends CI_Controller{

  function __construct()
  {
    parent::__construct();
    is_logged_in();
    validar_acceso();
    $this->load->model('Usuario_model');
    $this->load->model('Persona_model');
    $this->load->model('Perfil_model');
    $this->load->model('Perfil_usuario_model');
  }

  /*
  * Listing of usuarios
  */
  function index()
  {
    $data['title']='Usuarios - ESMN';
    $data['page_title']='<span class="m-r-10 mdi mdi-account">Usuarios </span>';
    $params['limit'] = RECORDS_PER_PAGE;
    $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

    $config = $this->config->item('pagination');
    $config['base_url'] = site_url('usuario/index?');
    $config['total_rows'] = $this->Usuario_model->get_all_usuarios_count();
    $this->pagination->initialize($config);

    $data['usuarios'] = $this->Usuario_model->get_all_usuarios($params);

    $data['boton_edit']=validar_botones('edit');
    $data['boton_add']=validar_botones('add');
    $data['boton_remove']=validar_botones('remove');

    $this->load->view('templates/header',$data);
    $this->load->view('usuario/index',$data);
    $this->load->view('templates/footer',$data);
  }

  /*
  * Adding a new usuario
  */
  function add($id_persona)
  {
    $data['persona'] = $this->Persona_model->get_persona($id_persona);

    if(isset($data['persona']['id']) && empty($this->Usuario_model->get_usuario_by_persona($id_persona)))
    {
      $this->form_validation->set_rules('username','Username','required|max_length[128]|is_unique[usuario.username]');
      $this->form_validation->set_rules('password','Password','required|max_length[256]');
      $this->form_validation->set_rules('id_perfil','Perfil','required');

      if($this->form_validation->run())
      {
        $username = strtolower(html_escape($this->input->post('username',TRUE)));
        $password = hash('sha512',$username.html_escape($this->input->post('password',TRUE)));
        $params = array(
          'id_persona' => $id_persona,
          'username' => $username,
          'password' => $password,
        );

        $usuario_id = $this->Usuario_model->add_usuario($params);

        $id_perfil = $this->input->post('id_perfil',TRUE);
        $permisos = $this->Perfil_model->get_perfil($id_perfil)['permisos'];
        $params_perfil_usuario=array(
          'id_usuario' => $usuario_id,
          'id_perfil' => $this->input->post('id_perfil',TRUE),
          'permisos' => $permisos,
        );

        $this->Perfil_usuario_model->add_perfil_usuario($params_perfil_usuario);
        $this->session->set_flashdata('crear', 'Nueva usuario creado');
        redirect('usuario/index');
      }
      else
      {
        $data['title']= 'Crear Usuario - ESMN';
        $data['page_title']= 'Crear Usuario -> '.$data['persona']['nombre'].' '.$data['persona']['apellido'];

        $data['username']=strtolower(substr($data['persona']['nombre'],0,1).$data['persona']['apellido']);
        $data['all_roles'] = $this->Perfil_model->get_all_perfiles();

        $this->load->view('templates/header',$data);
        $this->load->view('usuario/add',$data);
        $this->load->view('templates/footer',$data);
      }

    }else
        show_error('La persona no existe o ya tiene un usuario');

  }

  /*
  * Editing a usuario
  */
  function edit($id)
  {
    // check if the usuario exists before trying to edit it
    $data['usuario'] = $this->Usuario_model->get_usuario($id);

    if(isset($data['usuario']['usuario_id']))
    {
      $this->load->library('form_validation');

      $this->form_validation->set_rules('password','Password','max_length[256]');
      $this->form_validation->set_rules('username','Username','required|max_length[128]');
      $this->form_validation->set_rules('activo','Estado activo','required|integer');

      if($this->form_validation->run())
      {
        $params = array(
          'username' => $this->input->post('username',TRUE),
          'activo' => $this->input->post('activo',TRUE),
        );
        if ($this->input->post('password')) {
          $params['password'] = hash('sha512',$this->input->post('username',TRUE).html_escape($this->input->post('password',TRUE)));
        }

        $this->Usuario_model->update_usuario($id,$params);
        $this->session->set_flashdata('editar', 'Se guardaron los cambios');
        redirect('usuario/index');
      }
      else
      {
        $data['title']='Editar usuario - ESMN';
        $data['page_title']='Editar usuario -> '.$data['usuario']['nombre'].' '.$data['usuario']['apellido'];

        $this->load->view('templates/header',$data);
        $this->load->view('usuario/edit',$data);
        $this->load->view('templates/footer',$data);
      }
    }
    else
    show_error('The usuario you are trying to edit does not exist.');
  }

  /*
  * Deleting usuario
  */
  function remove($id)
  {
    $usuario = $this->Usuario_model->get_usuario($id);

    // check if the usuario exists before trying to delete it
    if(isset($usuario['usuario_id']))
    {
      $this->Perfil_usuario_model->delete_perfil_usuario($id);
      $this->Usuario_model->delete_usuario($id);
      $this->session->set_flashdata('eliminar', 'Usuario eliminado');
      redirect('usuario/index');
    }
    else
    show_error('The usuario you are trying to delete does not exist.');
  }

  function password_change($id){
    $data['usuario'] = $this->Usuario_model->get_usuario($id);

    if (isset($data['usuario']['usuario_id'])) {
      if ($this->session->userdata('usuario_id')==$id) {
        $params_rule = json_encode(array('usuario_id'=>$id,'username'=>$data['usuario']['username']));
        $this->form_validation->set_rules('actual_password','Contraseña Actual','required|callback_check_password['.$params_rule.']');
        $this->form_validation->set_message('check_password','La contraseña es incorrecta!');

        $this->form_validation->set_rules('new_password','Nueva Contraseña','required|min_length[6]');
        $this->form_validation->set_rules('repeat_new_password','Repetir Nueva Contraseña','required|min_length[6]|matches[new_password]');

        if($this->form_validation->run()){

          $params = array(
            'password' => hash('sha512',$data['usuario']['username'].html_escape($this->input->post('new_password'))),
          );

          $this->Usuario_model->update_usuario($id,$params);
          // $this->session->set_flashdata('editar', 'Se guardaron los cambios');
          redirect('login/logout');

        }else {
          $data['title']='Cambiar contraseña - ESMN';
          $data['page_title']=$data['usuario']['nombre'].' '.$data['usuario']['apellido'].' -> Cambiar contraseña';

          $data['js'] = array('password_change.js');

          $this->load->view('templates/header',$data);
          $this->load->view('usuario/password_change',$data);
          $this->load->view('templates/footer',$data);
        }

      }else {
        show_error('No tienes permiso para estar aqui!');
      }
    }else {
      show_error('El usuario no existe!');
    }
  }

  public function check_password($field_value,$params = array()){
    $pass = hash('sha512',json_decode($params)->username.html_escape($field_value));
    $query = $this->Usuario_model->check_password(json_decode($params)->usuario_id,$pass);
    return (!empty($query)) ? true : false;
  }

}
